# 敏捷开发和Scrum #
敏捷软件开发越来越流行了，而且基本深入人心。技术水平高的人尤其推崇。

当我们学习编程时，本性都是敏捷的，谁都不想浪费时间。只是进入企业（不管大小）后，由于管理的需要，产生了不必要的浪费，也就显得不太敏捷了。

瀑布V模型在早期开发周期长，需求变化少的情况下还是很不错的，只是互联网时代软件开发技术日新月异，更新越来越快，这又不得不回到原来的思想，精简管理来降低浪费。

由此不要抱怨敏捷，它只是揭开了软件开发的遮羞布而已。

敏捷是由很多技术实践结合在一起的，依靠有经验的开发者去实施。

## 工作环境 ##
不需要电脑，积极回答问题，并多多提问。

## 简单历史 ##
敏捷这个术语早期有人叫轻量级（lightweight）软件过程，来区别于CMM、RUP等重量级软件过程。后来又觉得本质不是轻重的问题，所以又改成敏捷（Agile）。

Insert 18333fig0101.png 
图 1-1. 敏捷宣言

敏捷的技术实践在敏捷出现前就出现了，如持续集成，代码共享，结对编程。甚至是那些敏捷流派，如XP、Scrum、FDD都早就有了。只是这些技术先驱们觉得单打独斗太累，因此在一次聚会中一起创建了敏捷宣言[^11]。

### 敏捷流派 ###
从2004年起，敏捷开始展露锋芒，主要原因是恰好互联网企业需要快速开发，快速交付。他们就顺理成章地采用了敏捷的方式。

同时传统企业开始感受到了压力，碰到了问题，需要改进了，看看别人都敏捷了，开始跟风（褒义）了，这就碰到了选择的问题。记住，只有等你到了一定的水准后，才能无招胜有招。早期还是要学些固定套路的，这些套路就是不同的敏捷开发过程。

 * XP（极限编程）较早出现在中国的原因，得益于当初翻译的几本书（2001年），不过有点极端了，很多传统企业都不能适应。
 * Scrum是一个框架，概念清晰，比较容易上手（狡猾），当然它还是得和其他实践同步开展。不管怎么样，Scrum越来越流行了；当然骂声也不少，认为它什么都没讲，太虚了。实际上他们大多数人把自身的问题归结于Scrum了。
 * FDD（Feature Driven Development）等还有一些其他的过程，声音慢慢就越来越少了。猜想商业是一方面，推动者的能力或兴趣也是一方面。
 
这里，我们主要以Scrum来讲解敏捷，但千万别以为Scrum就是敏捷。可以阅读相关知识来了解更多的敏捷。

## Scrum 基本知识 ##
Scrum[^12]是迭代式增量软件开发过程，也是一种敏捷软件开发的框架，通常用于敏捷软件开发。Scrum在英语的意思是橄榄球里的争球。

### 基本角色 ###
Scrum是一个包括了一系列实践和预定义角色的过程框架。Scrum中的主要角色包括：

 1. **Scrum Master**是来确保团队合理的运作Scrum，并帮助团队移除实施中的障碍。
 2. **产品负责人(PO: Product Owner)**，确定产品的方向和愿景，定义产品发布的内容、优先级及交付时间，为产品负责。
 3. **开发团队(Team)**，一个跨职能的小团队，人数5-9人，团队拥有交付可用软件需要的各种技能。
 
Insert 18333fig0102.png 
图 1-2. Scrum框架
 
### 框架过程 ### 
在每一个Sprint（两到四周的周期，其长度由开发团队决定）当中，开发团队创建可用的（可以随时推出）软件的一个增量。每一个Sprint所要实现的功能来自**产品待办事项列表（Product backlog）**。

产品待办事项列表是按照优先级排列的要完成的工作的概要需求，在团队的**计划会议（Planning meeting）**中，PO给出各个功能的优先级，开发团队一起决定在下一次Sprint中他们能够承诺完成多少功能，这就形成了**Sprint待办事项列表（Sprint backlog)**。

在Sprint过程中，没有人能够变更Sprint待办事项列表，这意味着在Sprint中需求是被冻结的(No Change)。

**每日站立会议（Daily standup meeting）**一般定在早上，持续10分钟左右，每个团队成员需要回答三个问题来了解整个的运行情况和潜在的风险：

 1. 昨天你完成了哪些工作？
 2. 今天你打算做什么？
 3. 完成你的目标是否存在什么障碍？
 
在Sprint结束时，会有一个**评审会议（Review meeting）**来检查一下功能是否按照产品负责人要求地完成了，质量应该是由团队保证的，而不是产品负责人或其他人负责。

评审会议后的**回顾会议（Retrospective meeting）**是团队自己帮助自己发现问题，并提出行之有效的方式进行提高，所以这不是由其他人来组织的。

### 常用的实践 ###
管理Scrum过程有很多实施方法，如即时贴(yellow stick)、燃尽图（burndown chart )、白板(whiteboard)。Scrum最大的好处之一是它非常容易学习，而且启动Scrum应用并不需要太多的投入。

Insert 18333fig0103.png 
图 1-3. 每日例会中的任务白板（图来自《硝烟中的Scrum和XP》一书）

## 相关知识 ##
敏捷这个范畴很大，在过程这个方面，建议看看XP和Lean、看板等内容。

## 课后练习 ##
学会使用白板来做团队任务的分配，并且开始体会团队合作和企业中的工作任务和以前的不同。

 1. 在Wiki系统中，各自创建自己的个人主页。
 2. 敏捷团队到底要不要团队组长（Team leader），简单阐述想法，记录在Wiki中。
 3. 一个敏捷团队几个人是最适合的，简单阐述想法，记录在Wiki中。
 4. Scrum周期多长是最合适的，简单阐述想法，记录在Wiki中。
 
## 小结 ##
敏捷听起来很虚，但是实际上回归了软件开发的本质，关注需求，团队合作，不断进步。

## 参考阅读 ##
 1. 硝烟中的Scrum和XP: http://www.infoq.com/cn/minibooks/scrum-xp-from-the-trenches
 2. 看板和Scrum——相得益彰：http://www.infoq.com/cn/minibooks/kanban-scrum-minibook-cn
 3. 你的Scrum检查列表：http://www.infoq.com/cn/minibooks/scrum-checklists-cn
 4. What is scrum? http://www.scrumalliance.org/pages/what_is_scrum
 
 [^11]: http://agilemanifesto.org/iso/zhchs/
 [^12]: http://zh.wikipedia.org/wiki/Scrum
 
